<div class="row">
	<%= render "users/unless_login_header" %>
</div>
<div class="row">
<h4 class="col-xs-3 col-xs-offset-2" style="width: 180px; text-align: center; background-color: #EEEEEE">注文情報確認</h4>
</div>
<div class="row">
	<div class="col-xs-6 col-xs-offset-1">
	<table class = "table table-bordered" >
	<thead>
		<tr class="active">
			<th>商品</th>
			<th>単価（税込）</th>
			<th>数量</th>
			<th>小計</th>
		</tr>
	</thead>
	<tbody>
		<% current_user.carts.each do |cart| %>
		<tr>
			<td>
				<%= cart.product.name %><br>
			</td>
			<td>
				<%= (cart.product.now_price * 1.1).round.to_s(:delimited) %><br>
			</td>
			<td>
				<%= cart.number %><br>
			</td>
			<td><%= (cart.number * cart.product.now_price * 1.1).round.to_s(:delimited) %></td>
		</tr>
		<% end %>
	</tbody>
</table>
</div>
<div class="col-xs-2 col-xs-offset-1">
<table class = "table table-bordered">
		<tr>
			<th class="active">送料</th>
			<td>800</td>
		</tr>
		<tr>
			<th class="active">商品合計</th>
			<td><%= @total_price.round.to_s(:delimited) %></td>
		</tr>
		<tr>
			<th class="active">請求金額</th>
			<td><%= (@total_price + 800).round.to_s(:delimited) %></td>
		</tr>
</table>
</div>
<div class="row">
<h5><strong>支払方法</strong></h5>
<% if @payment == "1" %>
<p>クレジットカード</p>
<% else %>
<p>銀行振込</p>
<% end %>
</div>
<div class="row">
お届け先
<%= @bbb %>
<%= @ddd %>
<%= @ccc %>
</div>
<%= form_with(url: users_orders_path,model:@order, local: true) do |f| %>
<%= f.hidden_field :user_id, :value => current_user.id %>
<%= f.hidden_field :post_code, :value => @bbb %>
<%= f.hidden_field :address, :value => @ddd %>
<%= f.hidden_field :name, :value => @ccc %>
<%= f.hidden_field :total_price, :value => @total_price %>
<%= f.hidden_field :shipping_fee, :value => 800 %>
<%= f.hidden_field :payment, :value => @payment %>
<%= f.hidden_field :flag, :value => 1 %>
	<% current_user.carts.each do |cart| %>
	<%= f.fields_for :ordered_products do |a| %>
		<%= a.hidden_field :product_id, :value => cart.product.id %>
		<%= a.hidden_field :number, :value => cart.number %>
		<%= a.hidden_field :price, :value => cart.product.now_price %>
		<%= a.hidden_field :flag, :value => 1 %>
		<!-- 親モデルにデータを飛ばすときに子モデルにも一緒にデータを飛ばす方法
		https　://www.y-hakopro.com/entry/2019/08/03/234126 -->
	<% end %>
<!-- 	orderコントローラーでparamsとして得られるようにしてから
	fields_for :ordered_products内に保存するデータのフォームを入れることで、
	ordered_productsに保存できるようになる。 -->
<% end %>
<div class="row">
<%= f.submit "購入を確定する" %>
<!-- orderに入れるnewから持ってきた情報とかを全部隠しパラメーターにして送ってます -->
</div>
<% end %>